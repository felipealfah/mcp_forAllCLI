#!/bin/bash

# ========================================
# MCP Servers Hub - Instala√ß√£o R√°pida
# ========================================

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun√ß√£o para imprimir mensagens coloridas
print_message() {
    echo -e "${BLUE}[MCP Hub]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Fun√ß√£o para verificar pr√©-requisitos
check_prerequisites() {
    print_message "Verificando pr√©-requisitos..."
    
    # Verificar Node.js
    if ! command -v node &> /dev/null; then
        print_error "Node.js n√£o encontrado. Instale Node.js 18+ primeiro."
        print_message "Visite: https://nodejs.org/"
        exit 1
    fi
    
    NODE_VERSION=$(node --version | cut -d'v' -f2 | cut -d'.' -f1)
    if [ "$NODE_VERSION" -lt 18 ]; then
        print_error "Node.js 18+ √© necess√°rio. Vers√£o atual: $(node --version)"
        exit 1
    fi
    
    print_success "Node.js $(node --version) encontrado"
    
    # Verificar npm
    if ! command -v npm &> /dev/null; then
        print_error "npm n√£o encontrado. Instale npm primeiro."
        exit 1
    fi
    
    print_success "npm $(npm --version) encontrado"
    
    # Verificar Git
    if ! command -v git &> /dev/null; then
        print_warning "Git n√£o encontrado. A instala√ß√£o continuar√°, mas voc√™ n√£o poder√° versionar suas configura√ß√µes."
    else
        print_success "Git $(git --version | cut -d' ' -f3) encontrado"
    fi
}

# Fun√ß√£o para instalar depend√™ncias
install_dependencies() {
    print_message "Instalando depend√™ncias..."
    
    if [ -f "package.json" ]; then
        npm install
        print_success "Depend√™ncias instaladas"
    else
        print_error "package.json n√£o encontrado"
        exit 1
    fi
}

# Fun√ß√£o para executar setup
run_setup() {
    print_message "Executando setup autom√°tico..."
    
    if [ -f "scripts/setup/setup.js" ]; then
        node scripts/setup/setup.js
        print_success "Setup conclu√≠do"
    else
        print_error "Script de setup n√£o encontrado"
        exit 1
    fi
}

# Fun√ß√£o para configurar vari√°veis de ambiente
setup_environment() {
    print_message "Configurando vari√°veis de ambiente..."
    
    if [ -f "configs/env/env.example" ]; then
        if [ ! -f "configs/env/.env" ]; then
            cp configs/env/env.example configs/env/.env
            print_success "Arquivo .env criado a partir do exemplo"
            print_warning "Edite configs/env/.env com suas configura√ß√µes antes de continuar"
        else
            print_warning "Arquivo .env j√° existe. Verifique se est√° configurado corretamente"
        fi
    else
        print_error "Arquivo env.example n√£o encontrado"
        exit 1
    fi
}

# Fun√ß√£o para mostrar pr√≥ximos passos
show_next_steps() {
    echo ""
    echo -e "${BLUE}========================================${NC}"
    echo -e "${BLUE}üéâ Instala√ß√£o Conclu√≠da com Sucesso! üéâ${NC}"
    echo -e "${BLUE}========================================${NC}"
    echo ""
    echo -e "${GREEN}Pr√≥ximos Passos:${NC}"
    echo ""
    echo "1. Configure suas vari√°veis de ambiente:"
    echo "   nano configs/env/.env"
    echo ""
    echo "2. Conecte suas CLIs:"
    echo "   npm run connect-cli"
    echo ""
    echo "3. Adicione seus servidores MCP:"
    echo "   npm run add-server"
    echo ""
    echo "4. Sincronize com suas CLIs:"
    echo "   npm run sync"
    echo ""
    echo "5. Verifique o status:"
    echo "   npm run status"
    echo ""
    echo -e "${BLUE}Documenta√ß√£o:${NC}"
    echo "   docs/CONFIGURATION.md"
    echo ""
    echo -e "${BLUE}Comandos √öteis:${NC}"
    echo "   npm run help          # Ver todos os comandos"
    echo "   npm run status        # Verificar status do sistema"
    echo "   npm run list-servers  # Listar servidores"
    echo "   npm run list-clis     # Listar CLIs conectadas"
    echo ""
    echo -e "${YELLOW}üí° Dica:${NC} Execute 'npm run status' para verificar a sa√∫de do sistema"
    echo ""
}

# Fun√ß√£o principal
main() {
    echo -e "${BLUE}========================================${NC}"
    echo -e "${BLUE}üöÄ MCP Servers Hub - Instala√ß√£o R√°pida${NC}"
    echo -e "${BLUE}========================================${NC}"
    echo ""
    
    # Verificar se estamos no diret√≥rio correto
    if [ ! -f "package.json" ]; then
        print_error "Execute este script no diret√≥rio raiz do MCP Servers Hub"
        exit 1
    fi
    
    # Verificar pr√©-requisitos
    check_prerequisites
    
    # Instalar depend√™ncias
    install_dependencies
    
    # Executar setup
    run_setup
    
    # Configurar ambiente
    setup_environment
    
    # Mostrar pr√≥ximos passos
    show_next_steps
}

# Executar fun√ß√£o principal
main "$@"
